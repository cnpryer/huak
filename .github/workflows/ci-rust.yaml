name: Rust CI

on:
  push:
    branches:
      - "master"
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/ci-rust.yaml'
  pull_request:
    branches:
      - "master"
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/ci-rust.yaml'

jobs:
  test-and-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Test and build
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: actions/setup-python@v1
      - name: Test
        run: cargo test --all-features -- --test-threads=1
      - name: Build
        run: cargo build --release

  lint-and-fmt:
    name: Lint and check fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - name: Run formatting checks
        run: |
          cargo fmt --all -- --check
      - name: Run lints
        env:
          RUSTFLAGS: -C debuginfo=0
        run: |
          cargo clippy --all-features
          cargo clippy -- -D warnings

  dry-release:
    name: Build with maturin
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v1
      - name: build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist --features openssl

