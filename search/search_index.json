{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Huak","text":"<p>A Python package manager written in Rust inspired by Cargo.</p> <p>Warning</p> <p><code>huak</code> is in an experimental state.</p>"},{"location":"#contents","title":"Contents","text":"<ul> <li>User Guide</li> </ul>"},{"location":"CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at cnpryer#6201. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>We appreciate your interest in contributing to our project!</p> <p>You can contribute to Huak by checking for unassigned issues or even just documenting features and bugs by creating new issues.</p>"},{"location":"CONTRIBUTING/#testing","title":"Testing","text":"<p>Use cargo to run the tests.</p> <pre><code>\u276f cargo test\n</code></pre> <p>Note that on Windows the tests may run slower than on other systems.</p>"},{"location":"CONTRIBUTING/#making-a-contribution","title":"Making a contribution","text":"<p>We follow the standard GitHub flow when making contributions to Huak.</p> <p>Make sure to communicate your interest prior submitting a PR by ussing Issues. You can create one here.</p>"},{"location":"user_guide/","title":"User Guide","text":"<p>Warning</p> <p><code>huak</code> is in an experimental state.</p>"},{"location":"user_guide/#contents","title":"Contents","text":"<ol> <li>Getting started</li> <li>Manage your dependencies</li> <li>Support more of your workflow</li> <li>Distribute your project</li> <li>Configure Huak</li> </ol>"},{"location":"user_guide/#getting-started","title":"Getting started","text":""},{"location":"user_guide/#installation","title":"Installation","text":"<p>\u26a0\ufe0f WARNING: The PyPI distribution is outdated. Until it is updated you'll need to install <code>huak</code> from source.</p> <pre><code>cargo install --git https://github.com/cnpryer/huak.git huak\n</code></pre> <p>Then add \"$HOME/.huak/bin\" to your path.</p>"},{"location":"user_guide/#create-a-new-project","title":"Create a new project","text":"<p>To create a new project use the <code>new</code> command.</p> <pre><code>~/github\n\u276f huak new my-project\n</code></pre>"},{"location":"user_guide/#or-initialize-an-existing-project","title":"Or initialize an existing project","text":"<pre><code>~/github/existing-project \n\u276f huak init\n</code></pre> <p><code>huak</code> distinguishes between library and application-like projects. Projects default to the library type if a type isn't specified. Specify the type with either the <code>--lib</code> or <code>--app</code> flag.</p> <p>Initializing an existing project adds a <code>pyproject.toml</code> to the current directory. Bootstrapping the project with the <code>new</code> command creates a Python project with the following structure:</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f tree .\n.\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my_project\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 __init__.py\n\u2514\u2500\u2500 tests\n    \u2514\u2500\u2500 test_version.py\n</code></pre> <p>Note</p> <p>Without <code>--no-vcs</code> <code>huak</code> generates a <code>git</code>-initialized project.</p>"},{"location":"user_guide/#manage-your-dependencies","title":"Manage your dependencies","text":""},{"location":"user_guide/#add-a-dependency","title":"Add a dependency","text":"<p>Use <code>huak</code> to add dependencies to your Python project.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak add xlcsv\n</code></pre>"},{"location":"user_guide/#installer-options","title":"Installer Options","text":"<p>Currently <code>huak</code> uses <code>pip</code> under the hood for package installation. You can pass additional arguments onto <code>pip</code>. Any arguments after <code>--</code> are handed off to <code>pip install</code>.</p> <p>Note that <code>huak</code> will use <code>uv</code> instead of <code>pip</code> in the future (see this issue for any updates).</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak add torch torchvision torchaudio -- --extra-index-url https://download.pytorch.org/whl/cu117\n</code></pre> <p><code>huak</code> will add the packages to your pyproject.toml, so passing PEP 508 strings would help persist this behavior for future installs.</p> <p>Tip</p> <p>You can also assign dependencies to a group using <code>--group</code>.</p>"},{"location":"user_guide/#manually-trigger-dependency-installation","title":"Manually trigger dependency installation","text":"<p>Use the <code>init</code> command again to install the project's dependencies.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak init\n</code></pre>"},{"location":"user_guide/#use-optional-dependency-groups","title":"Use optional dependency groups","text":"<pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak add --group my-group\n</code></pre>"},{"location":"user_guide/#update-dependencies","title":"Update dependencies","text":"<p>To update a dependency use the <code>update</code> command.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak update xlcsv\n</code></pre> <p>Or attempt to update everything.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak update\n</code></pre>"},{"location":"user_guide/#remove-dependencies","title":"Remove dependencies","text":"<p>To remove a dependency from the project use the <code>remove</code> command.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak remove xlcsv\n</code></pre>"},{"location":"user_guide/#support-more-of-your-workflow","title":"Support more of your workflow","text":"<p>Huak ships commands allowing you to format your python code, lint it, and test it.</p>"},{"location":"user_guide/#format-your-code","title":"Format your code","text":"<p>Use the <code>fmt</code> command to format your Python project's code.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak fmt\n</code></pre>"},{"location":"user_guide/#using-check","title":"Using --check","text":"<p>Warning</p> <p>As of <code>v0.0.20</code> <code>huak</code> no longer uses <code>black</code>.</p> <p>Use <code>--check</code> if all you want to do is verify your code is already formatted. Note that <code>huak</code> currently uses <code>ruff</code> to format your code. This means that <code>--</code> can only pass options to <code>ruff</code>. Use the <code>[tool.ruff]</code> for more configuration.</p> <p>Warning</p> <p><code>huak</code> will exit prior to running with <code>--check</code> if your imports are not sorted. See #510 for the status of this issue.</p>"},{"location":"user_guide/#lint-your-code","title":"Lint your code","text":"<p>Use the <code>lint</code> command to lint your Python project's code.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 took 2s \n\u276f huak lint\n</code></pre> <p>The <code>--fix</code> flag can be used to address any auto-fixable issues.</p> <p><code>huak</code> wraps tools like <code>ruff</code> for some of its commands. To configure a wrapped tool such as <code>ruff</code> use the pyproject.toml file:</p> <pre><code>[tool.ruff]\n# ...\n</code></pre> <p><code>huak</code> also uses <code>mypy</code> for type-checking. To disable this behavior use <code>--no-types</code>.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 took 2s \n\u276f huak lint --no-types\n</code></pre> <p>Note</p> <p>Currently, since <code>ruff</code> is the default tool used by <code>huak lint</code>, passing additional options with <code>--</code> is reserved for <code>ruff</code>. To configure <code>mypy</code> use the <code>[tool.mypy]</code> approach. This limitation will be addressed in future versions of <code>huak</code> (see #505).</p>"},{"location":"user_guide/#test-your-code","title":"Test your code","text":"<p>Use the <code>test</code> command to test your project.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0\n\u276f huak test\n</code></pre>"},{"location":"user_guide/#run-commands-within-your-projects-environment-context","title":"Run commands within your project's environment context","text":"<p>You can use <code>huak</code> to run a command within the Python environment your project uses.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak run which python\n/Users/chrispryer/github/my-project/.venv/bin/python\n</code></pre>"},{"location":"user_guide/#activate-the-virtual-environment","title":"Activate the virtual environment","text":"<p><code>huak</code> also implements an <code>activate</code> command to activate a virtual environment.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak activate\n\n(.venv) bash-3.2$\n</code></pre> <p>Note</p> <p>Currently <code>huak</code> just runs <code>bash --init-file</code> on unix systems and uses <code>powershell</code> on Windows. <pre><code>(.venv) PS C:\\Users\\chris\\github\\my-project&gt;\n</code></pre> See #486 for the status on the <code>activate</code> command.</p>"},{"location":"user_guide/#manage-your-python-installations","title":"Manage your Python installations","text":"<p>By default <code>huak</code> will use the first Python interpreter found from your <code>PATH</code> environment variable. You can <code>list</code> these by using the <code>python</code> command.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak python list\n1: /Users/chrispryer/.pyenv/shims/python3.11\n2: /Users/chrispryer/.pyenv/shims/python3.10\n...\n</code></pre> <p>So <code>huak</code> would use <code>/Users/chrispryer/.pyenv/shims/python3.11</code> out of the box. You can use a different installed Python version with <code>use</code>.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak python use 3.10\n</code></pre>"},{"location":"user_guide/#distribute-your-project","title":"Distribute your project","text":""},{"location":"user_guide/#publish-to-pypi","title":"Publish to PyPI","text":"<p>If you're building a Python package you'd like to share, use <code>huak build</code> and <code>huak publish</code> to build and publish the project to PyPI.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak build\n\nmy-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak publish\n</code></pre>"},{"location":"user_guide/#cleaning-up","title":"Cleaning up","text":"<p>Use <code>huak clean</code> to clean out the dist/ directory.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 took 26s \n\u276f huak clean\n</code></pre>"},{"location":"user_guide/#configure-huak","title":"Configure Huak","text":""},{"location":"user_guide/#configure-shell-completion","title":"Configure shell completion","text":"<p>With <code>huak completion</code> you can setup shell completion for <code>huak</code>.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak completion -h\nGenerates a shell completion script for supported shells. See the help menu for more information on supported shells\n\nUsage: huak completion [OPTIONS]\n\nOptions:\n  -s, --shell &lt;shell&gt;  [possible values: bash, elvish, fish, powershell, zsh]\n  -u, --uninstall      Uninstalls the completion script from your shell init file. If this flag is passed the --shell is required\n  -h, --help           Print help\n</code></pre> <p>Add <code>huak completion --shell &lt;shell&gt;</code> to your shell's initialization to use this feature.</p> <pre><code>eval \"$(huak completion --shell &lt;shell&gt;)\"\n</code></pre>"},{"location":"user_guide/#providing-feedback","title":"Providing feedback","text":"<p>Any bugs or suggestions can be submitted as issues here. All feedback is welcome and greatly appreciated \u2764\ufe0f.</p> <pre><code>my-project on master \ud83d\udce6 v0.0.1 via \ud83d\udc0d v3.11.0 \n\u276f huak --version\nhuak 0.0.20\n</code></pre>"}]}